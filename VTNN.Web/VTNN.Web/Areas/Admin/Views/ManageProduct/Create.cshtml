@model VTNN.DataAccess.Data.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@section Scripts {

    <script src="~/Areas/Asset/js/ckeditor.js"></script>
    <script>
        ClassicEditor.create(document.querySelector(".editor"), {
            toolbar: {
                items: [
                    "heading",
                    "|",
                    "bold",
                    "italic",
                    "link",
                    "bulletedList",
                    "numberedList",
                    "|",
                    "outdent",
                    "indent",
                    "|",
                    "imageUpload",
                    "blockQuote",
                    "insertTable",
                    "mediaEmbed",
                    "undo",
                    "redo",
                ],
            },
            language: "vi",
            licenseKey: "",
        })
            .then((editor) => {
                window.editor = editor;
            })
            .catch((error) => {
                console.error("Oops, something went wrong!");
                console.error(
                    "Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:"
                );
                console.warn("Build id: 6gev7fkzarkd-nohdljl880ze");
                console.error(error);
            });
        @*@Scripts.Render("~/bundles/jqueryval")*@
    </script>
}
<div class="content container-fluid">
    <div class="row">
        <div class="col-xl-8 offset-xl-2">
            <!-- Page Header -->
            <div class="page-header">
                <div class="row">
                    <div class="col">
                        <h3 class="page-title">Thêm sản sản phẩm</h3>
                    </div>
                </div>
            </div>
            <!-- /Page Header -->

            <div class="card">
                <div class="card-body">
                    <!-- Form -->
                    <form method="post" action="@Url.Action("Create","ManageProduct")" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label>Tên sản phẩm</label>
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="col-md-4">Ảnh Sản Phẩm</label>
                            <img id="output" class="img-rounded" width="200" height="200" src="~/wwwroot/product/images/no-image-news.png" alt="Ảnh" />
                            <p class="text-center"><label for="ufile" style="cursor:pointer;">Chọn file ảnh</label></p>
                            <input name="Image" id="ufile" type="file" style="display:none;" onchange="loadFile(event)" />
                        </div>
                        <div class="form-group">
                            <label>Giá bán</label>
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Nguồn hàng:</label>
                            @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Trọng lượng</label>
                            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Số lượng</label>
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Danh mục</label>
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="">Mô tả</label>
                            @*<div class="centered">
                                    <div class="editor-container">
                                        <div class="editor"></div>
                                    </div>
                                </div>*@
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="mt-4">
                            <button class="btn btn-primary" type="submit">
                                Thêm
                            </button>
                            <a href="@Url.Action("Index","ManageProduct")" class="btn btn-link">Huỷ</a>
                        </div>
                    </form>
                    <!-- /Form -->
                </div>
            </div>
        </div>
    </div>
</div>


@if (ViewBag.Error != null)
{
    <br />
    <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
}

<script>
    var loadFile = function (event) {
        var image = document.getElementById("output");
        image.src = URL.createObjectURL(event.target.files[0])
    }
</script>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>